{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/Questions.js\";\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport Typpgraphy from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Link } from \"@reach/router\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 500,\n    minWidth: 250,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: 5,\n    padding: 20\n  },\n  Grid: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  Typography: {\n    marginTop: 20\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction Questions({\n  questions,\n  upVote\n}) {\n  const classes = useStyles();\n  let content = !questions ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"...Something went wrong\") : React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Typpgraphy, {\n    className: classes.Typography,\n    variant: \"h3\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Questions\"), React.createElement(Grid, {\n    justify: \"center\",\n    alignItems: \"center\",\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 1,\n    className: classes.Grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, questions.map((question, index) => {\n    return React.createElement(Box, {\n      id: question._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Card, {\n      id: question._id,\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"p\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, question.title), React.createElement(Typography, {\n      variant: \"p\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, question.subtitle), React.createElement(Link, {\n      className: classes.paper,\n      id: question._id,\n      key: index,\n      question: question,\n      index: index,\n      to: \"/question/\".concat(question._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"See more\")), React.createElement(\"p\", {\n      onClick: () => upVote(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Votes: \", question.upVote)));\n  })));\n  return content;\n}\n\nexport default Questions;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/Questions.js"],"names":["React","Grid","Typography","Card","Button","Typpgraphy","Box","Link","makeStyles","useStyles","theme","card","maxWidth","minWidth","display","justifyContent","alignItems","flexDirection","margin","padding","marginTop","button","spacing","Questions","questions","upVote","classes","content","map","question","index","_id","title","subtitle","paper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport Typpgraphy from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport {Link} from \"@reach/router\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles( theme =>({\n    card : {\n        maxWidth : 500,\n        minWidth : 250,\n        display : 'flex',\n        justifyContent : 'center',\n        alignItems : 'center',\n        flexDirection : 'column', \n        margin : 5,\n        padding : 20\n    },\n    Grid : {\n        display: 'flex',\n        alignItems :'center',\n        flexDirection : 'row',\n    },\n    Typography : {\n        marginTop : 20\n    },\n    button : {\n        margin: theme.spacing(1),\n    }\n}));\n\nfunction Questions({questions, upVote}){\n\n    const classes = useStyles();\n    let content = (!questions) ? <div>...Something went wrong</div> : \n    \n        <Grid container justify=\"center\" alignItems=\"center\" xs={12}> \n            <Typpgraphy className={classes.Typography} variant=\"h3\" component=\"h2\" >Questions</Typpgraphy>\n        <Grid justify=\"center\" alignItems=\"center\" container item xs={12} spacing={1} className={classes.Grid}>\n        {questions.map((question, index) => {\n            return (        \n                <Box id={question._id}>\n                        <Card id={question._id} className={classes.card}>\n                                <Typography variant=\"p\" component=\"p\">{question.title}</Typography>\n                                    <Typography variant=\"p\" component=\"p\">{question.subtitle}</Typography>\n                                        <Link \n                                            className={classes.paper}\n                                            id={question._id}\n                                            key={index}\n                                            question={question}\n                                            index={index}\n                                            to={`/question/${question._id}`}><Button color=\"primary\" className={classes.button}>See more</Button>    \n                                        </Link> \n                                    <p onClick={() => upVote(index)}>Votes: {question.upVote}</p>    \n                        </Card>\n                </Box>\n                )\n            }\n        )}\n        </Grid>\n    </Grid>\n    return content;\n}\n\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}