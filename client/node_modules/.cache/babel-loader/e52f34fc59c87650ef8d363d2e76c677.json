{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js\";\nimport React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nconst useStyles = makeStyles({\n  paper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    marginTop: 20\n  },\n  Grid: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  Box: {\n    backgroundColor: 'red'\n  }\n});\n\nfunction Question({\n  getquestionid,\n  id\n}) {\n  const classes = useStyles();\n  const question = getquestionid(parseInt(id));\n  return React.createElement(Box, {\n    className: classes.Box,\n    width: 1,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Title: \", question.title), React.createElement(Typography, {\n    component: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Question: \", question.subtitle), React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Category: \", question.category), React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, question.upVote)));\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js"],"names":["React","Paper","Box","Typography","makeStyles","useStyles","paper","display","justifyContent","alignItems","flexDirection","marginTop","Grid","backgroundColor","Question","getquestionid","id","classes","question","parseInt","title","subtitle","category","upVote"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAE;AAC1BE,EAAAA,KAAK,EAAG;AACJC,IAAAA,OAAO,EAAG,MADN;AAEJC,IAAAA,cAAc,EAAG,QAFb;AAGJC,IAAAA,UAAU,EAAG,QAHT;AAIJC,IAAAA,aAAa,EAAG,QAJZ;AAKJC,IAAAA,SAAS,EAAG;AALR,GADkB;AAQ1BC,EAAAA,IAAI,EAAG;AACHL,IAAAA,OAAO,EAAE,MADN;AAEHE,IAAAA,UAAU,EAAE,QAFT;AAGHC,IAAAA,aAAa,EAAG;AAHb,GARmB;AAa1BR,EAAAA,GAAG,EAAG;AACFW,IAAAA,eAAe,EAAG;AADhB;AAboB,CAAF,CAA5B;;AAmBA,SAASC,QAAT,CAAkB;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAlB,EAAuC;AAEnC,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAMa,QAAQ,GAAGH,aAAa,CAACI,QAAQ,CAACH,EAAD,CAAT,CAA9B;AAEA,SAEI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACf,GAAxB;AAA6B,IAAA,KAAK,EAAE,CAApC;AAAuC,IAAA,SAAS,EAAC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEe,OAAO,CAACX,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACYY,QAAQ,CAACE,KADrB,CADJ,EAII,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeF,QAAQ,CAACG,QADxB,CAJJ,EAOI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeH,QAAQ,CAACI,QADxB,CAPJ,EAUI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,QAAQ,CAACK,MADd,CAVJ,CADJ,CAFJ;AAoBH;;AAED,eAAeT,QAAf","sourcesContent":["import React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(({\n    paper : {\n        display : 'flex',\n        justifyContent : 'center',\n        alignItems : 'center',\n        flexDirection : 'column', \n        marginTop : 20\n    },\n    Grid : {\n        display: 'flex',\n        alignItems :'center',\n        flexDirection : 'row',\n    },\n    Box : {\n        backgroundColor : 'red',\n    }\n}))\n\n\nfunction Question({getquestionid, id}) {\n    \n    const classes = useStyles();\n    const question = getquestionid(parseInt(id));\n\n    return(\n    \n        <Box className={classes.Box} width={1} component=\"div\">\n            <Paper className={classes.paper}>\n                <Typography component=\"head\">\n                    Title: {question.title}\n                </Typography>\n                <Typography component=\"h6\">\n                    Question: {question.subtitle}\n                </Typography>\n                <Typography component=\"p\">\n                    Category: {question.category}\n                </Typography>\n                <Typography component=\"p\">\n                    {question.upVote}\n                </Typography>\n            </Paper>     \n        </Box>\n   \n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}