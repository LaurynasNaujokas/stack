{"ast":null,"code":"import _slicedToArray from \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Navigation from \"./components/Navigation\";\nimport Questions from \"./components/Questions\";\nimport Question from \"./components/Question\";\nimport { Router } from '@reach/router';\nimport AddQuestion from './components/AddQuestion';\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    minWidth: 350,\n    minHeight: 200,\n    maxWidth: 500,\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  questionGrid: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    marginTop: 30,\n    marginBottom: 30\n  },\n  text: {\n    padding: 10\n  }\n});\nexport default function App() {\n  const classes = useStyles();\n  document.title = \"Stack Overflow\";\n\n  const _useState = useState([{\n    id: 0,\n    title: 'What is Javascript',\n    subtitle: 'I need more information about it',\n    category: 'Javascript',\n    upVote: 0,\n    answers: ['']\n  }, {\n    id: 1,\n    title: 'How to do map() function',\n    subtitle: 'Can someone tell how to do it step by step',\n    category: 'Angular',\n    upVote: 0,\n    answers: ['']\n  }, {\n    id: 2,\n    title: 'MongoDB or firebase?',\n    subtitle: 'Cant decide...',\n    category: 'React',\n    upVote: 0,\n    answers: ['']\n  }, {\n    id: 3,\n    title: 'Any good tutorials for ES6',\n    subtitle: 'Want to start practice, but dunno where',\n    category: 'Javascript',\n    upVote: 0,\n    answers: ['']\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        questions = _useState2[0],\n        setQuestions = _useState2[1];\n\n  const upVote = index => {\n    const newVote = [...questions];\n    newVote[index].upVote++;\n    setQuestions(newVote);\n  };\n\n  const addQuestion = value => {\n    const newQuestions = [...questions, value];\n    setQuestions(newQuestions);\n    console.log(\"1-New Question was created\");\n    console.log(questions);\n  };\n\n  const getquestionid = id => {\n    return questions.find(q => q.id === id);\n  };\n\n  const url = 'localhost:8080/api/v1/questions';\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(url, options);\n      const json = await res.json();\n      setResponse(json);\n    };\n\n    fetchData();\n  }, []);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Navigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(AddQuestion, {\n    path: \"/addQuestion\",\n    addQuestion: addQuestion,\n    questions: questions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Questions, {\n    path: \"/\",\n    questions: questions,\n    setQuestions: setQuestions,\n    upVote: upVote,\n    classes: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(Question, {\n    path: \"/question/:id\",\n    getquestionid: getquestionid,\n    setQuestions: setQuestions,\n    questions: questions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/App.js"],"names":["React","useState","makeStyles","Navigation","Questions","Question","Router","AddQuestion","useStyles","root","flexGrow","paper","minWidth","minHeight","maxWidth","display","flexDirection","questionGrid","justifyContent","marginTop","marginBottom","text","padding","App","classes","document","title","id","subtitle","category","upVote","answers","questions","setQuestions","index","newVote","addQuestion","value","newQuestions","console","log","getquestionid","find","q","url","useEffect","fetchData","res","fetch","options","json","setResponse"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Navigation from \"./components/Navigation\";\nimport Questions from \"./components/Questions\";\nimport Question from \"./components/Question\";\nimport {Router} from '@reach/router';\nimport AddQuestion from './components/AddQuestion';\n\nconst useStyles = makeStyles(({\n    root: {\n        flexGrow : 1\n    },\n    paper: {\n        minWidth : 350,\n        minHeight : 200,\n        maxWidth : 500,\n        display : 'flex',\n        flexDirection : 'row',\n    },\n    questionGrid : {\n        display : 'flex',\n        justifyContent : 'space-around',\n        marginTop : 30,\n        marginBottom : 30\n    },\n    text : {\n        padding: 10\n    }\n}));\n\nexport default function App() {\nconst classes = useStyles();\n\n    document.title = \"Stack Overflow\";\n\n    const [questions, setQuestions] =  useState([\n        {\n            id : 0,\n            title : 'What is Javascript',\n            subtitle : 'I need more information about it',\n            category : 'Javascript',\n            upVote : 0,\n            answers : ['']\n        },\n        {\n            id : 1,\n            title : 'How to do map() function',\n            subtitle : 'Can someone tell how to do it step by step',\n            category : 'Angular',\n            upVote : 0,\n            answers : ['']\n        },{\n            id : 2,\n            title : 'MongoDB or firebase?',\n            subtitle : 'Cant decide...',\n            category : 'React',\n            upVote : 0,\n            answers : ['']\n        },{\n            id : 3,\n            title : 'Any good tutorials for ES6',\n            subtitle : 'Want to start practice, but dunno where',\n            category : 'Javascript',\n            upVote : 0,\n            answers : ['']\n        }\n    ]);\n\n    const upVote = index => {\n        const newVote = [...questions];\n        newVote[index].upVote++\n        setQuestions(newVote);\n    };\n\n\n    const addQuestion = value => {\n        const newQuestions = [...questions, value ];\n        setQuestions(newQuestions);\n        console.log(\"1-New Question was created\")\n        console.log(questions);\n    };\n\n    const getquestionid = (id) =>  {\n        return questions.find(q => q.id === id);     \n     }\n\n     const url = 'localhost:8080/api/v1/questions';\n\n     useEffect(() => {\n        const fetchData = async () => {\n          const res = await fetch(url, options);\n          const json = await res.json();\n          setResponse(json);\n        };\n        fetchData();\n      }, []);\n\n\n\n\n\n\n\n    return (\n    <div className={classes.root}>\n            <Navigation />\n            <AddQuestion \n                path=\"/addQuestion\"\n                addQuestion={addQuestion}\n                questions={questions}\n            />\n        <Router>\n            <Questions\n                path=\"/\" \n                questions={questions} \n                setQuestions={setQuestions}\n                upVote={upVote}\n                classes={classes}\n            />\n            <Question \n                path=\"/question/:id\"\n                getquestionid={getquestionid}  \n                setQuestions={setQuestions}\n                questions={questions}\n            />   \n        </Router>\n    </div>\n  );\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}