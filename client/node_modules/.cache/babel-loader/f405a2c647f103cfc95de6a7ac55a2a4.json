{"ast":null,"code":"import _defineProperty from \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/AddQuestion.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nfunction AddQuestion({\n  addQuestion\n}) {\n  const _useState = useState({\n    title: '',\n    subtitle: '',\n    category: '',\n    upVotes: 0,\n    isCompleted: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const url = 'http://localhost:8080/api/v1/questions'; //Posting input state to api\n\n  const handleApi = e => {\n    e.preventDefault();\n\n    (async () => {\n      const rawResponse = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: value.title,\n          subtitle: value.subtitle,\n          category: value.category\n        })\n      });\n      const content = await rawResponse.json();\n      console.log(content);\n    })();\n  };\n\n  const onChange = event => {\n    setValue(_objectSpread({}, value, {\n      [event.target.name]: event.target.value\n    }));\n  }; //Should be in seperate component addQuestion, with reach router path\n\n\n  const classes = useStyles();\n  return React.createElement(\"form\", {\n    className: classes.container,\n    onSubmit: handleApi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    margin: \"normal\",\n    value: value.title,\n    name: \"title\",\n    onChange: onChange,\n    placeholder: \"Enter your title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    margin: \"normal\",\n    value: value.subtitle,\n    name: \"subtitle\",\n    onChange: onChange,\n    placeholder: \"Enter your subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    margin: \"normal\",\n    value: value.category,\n    name: \"category\",\n    onChange: onChange,\n    placeholder: \"Choose category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleApi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Submit Question\")));\n}\n\nexport default AddQuestion;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/AddQuestion.js"],"names":["React","useState","TextField","makeStyles","Button","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","AddQuestion","addQuestion","title","subtitle","category","upVotes","isCompleted","value","setValue","url","handleApi","e","preventDefault","rawResponse","fetch","method","headers","body","JSON","stringify","content","json","console","log","onChange","event","target","name","classes"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles( theme => ({\n    container : {\n        display : 'flex',\n        flexWrap : 'wrap'\n    },\n    textField : {\n        marginLeft : theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200\n    }\n}))\n\n\nfunction AddQuestion({addQuestion}){\n    const [value, setValue] = useState({\n        title : '',\n        subtitle : '',\n        category : '',\n        upVotes : 0,\n        isCompleted : false,\n    });\n\n    const url = 'http://localhost:8080/api/v1/questions';\n\n    //Posting input state to api\n    const handleApi = e => { \n        e.preventDefault();\n        (async () => {\n            const rawResponse = await fetch(url, {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                title: value.title,\n                subtitle: value.subtitle,\n                category : value.category\n            })\n            });\n            const content = await rawResponse.json();\n          \n            console.log(content);\n          })();\n       };\n\n    const onChange = (event) => {\n        setValue({ ...value, [event.target.name] : event.target.value});\n    }\n\n    //Should be in seperate component addQuestion, with reach router path\n\n    const classes = useStyles();\n    return(\n        <form className={classes.container} onSubmit={handleApi}>\n            <div>\n                <TextField\n                    id=\"standard-basic\"\n                    margin=\"normal\"\n                    value={value.title}\n                    name=\"title\"\n                    onChange={onChange}\n                    placeholder=\"Enter your title\"\n                />\n            </div>\n            <div>\n                <TextField \n                    id=\"standard-basic\"\n                    margin=\"normal\"\n                    value={value.subtitle}\n                    name=\"subtitle\"\n                    onChange={onChange}\n                    placeholder=\"Enter your subtitle\"\n                />\n            </div>\n            <div>\n                <TextField\n                    id=\"standard-basic\"\n                    margin=\"normal\"         \n                    value={value.category}\n                    name=\"category\"\n                    onChange={onChange}\n                    placeholder=\"Choose category\"\n                />                \n                <Button onClick={handleApi}>Submit Question</Button>\n            </div>\n        </form>\n    )\n}\n\nexport default AddQuestion;"]},"metadata":{},"sourceType":"module"}