{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js\";\nimport React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction Question({\n  getquestionid,\n  id,\n  questions,\n  setQuestions\n}) {\n  console.log(questions);\n  const q = getquestionid(parseInt(id));\n  console.log(q);\n\n  const upVote = id => {\n    console.log(\"pressed\");\n    const newVote = [...questions];\n    console.log(newVote);\n    newVote[id].upVote++;\n    setQuestions(newVote);\n  };\n\n  return React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Title: \", q.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Question: \", q.subtitle), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Category: \", q.category), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Upvote: \", q.upVote), React.createElement(\"button\", {\n    onClick: upVote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"UpVote\"));\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js"],"names":["React","Paper","Question","getquestionid","id","questions","setQuestions","console","log","q","parseInt","upVote","newVote","title","subtitle","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAKA,SAASC,QAAT,CAAkB;AAACC,EAAAA,aAAD;AAAeC,EAAAA,EAAf;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA;AAA9B,CAAlB,EAA+D;AAE3DC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,QAAMI,CAAC,GAAGN,aAAa,CAACO,QAAQ,CAACN,EAAD,CAAT,CAAvB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;;AAEA,QAAME,MAAM,GAAGP,EAAE,IAAI;AACjBG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,UAAMI,OAAO,GAAG,CAAC,GAAGP,SAAJ,CAAhB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACAA,IAAAA,OAAO,CAACR,EAAD,CAAP,CAAYO,MAAZ;AACAL,IAAAA,YAAY,CAACM,OAAD,CAAZ;AACH,GAND;;AAQA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYH,CAAC,CAACI,KAAd,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcJ,CAAC,CAACK,QAAhB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcL,CAAC,CAACM,QAAhB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYN,CAAC,CAACE,MAAd,CAJJ,EAKI;AAAQ,IAAA,OAAO,EAAEA,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADJ;AASH;;AAED,eAAeT,QAAf","sourcesContent":["import React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\n\n\n\n\nfunction Question({getquestionid,id, questions, setQuestions}) {\n\n    console.log(questions);\n    const q = getquestionid(parseInt(id));\n    console.log(q);\n\n    const upVote = id => {\n        console.log(\"pressed\");\n        const newVote = [...questions];\n        console.log(newVote);\n        newVote[id].upVote++;\n        setQuestions(newVote);\n    }\n\n    return(\n        <Paper>\n            <h1>Title: {q.title}</h1>\n            <p>Question: {q.subtitle}</p>\n            <p>Category: {q.category}</p>\n            <p>Upvote: {q.upVote}</p>\n            <button onClick={upVote}>UpVote</button>\n        </Paper>\n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}