{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js\";\nimport React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nconst useStyles = makeStyles({\n  paper: {\n    maxWidth: 500,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    marginTop: 20\n  },\n  Grid: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row'\n  }\n});\n\nfunction Question({\n  getquestionid,\n  id\n}) {\n  const classes = useStyles();\n  const question = getquestionid(parseInt(id));\n  return React.createElement(Container, {\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Box, {\n    maxWidth: \"100%\",\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    maxWidth: \"100%\",\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Title: \", question.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Question: \", question.subtitle), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Category: \", question.category), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, question.upVote))));\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js"],"names":["React","Paper","Box","Container","makeStyles","useStyles","paper","maxWidth","display","justifyContent","alignItems","flexDirection","marginTop","Grid","Question","getquestionid","id","classes","question","parseInt","title","subtitle","category","upVote"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAE;AAC1BE,EAAAA,KAAK,EAAG;AACJC,IAAAA,QAAQ,EAAG,GADP;AAEJC,IAAAA,OAAO,EAAG,MAFN;AAGJC,IAAAA,cAAc,EAAG,QAHb;AAIJC,IAAAA,UAAU,EAAG,QAJT;AAKJC,IAAAA,aAAa,EAAG,QALZ;AAMJC,IAAAA,SAAS,EAAG;AANR,GADkB;AAS1BC,EAAAA,IAAI,EAAG;AACHL,IAAAA,OAAO,EAAE,MADN;AAEHE,IAAAA,UAAU,EAAE,QAFT;AAGHC,IAAAA,aAAa,EAAG;AAHb;AATmB,CAAF,CAA5B;;AAkBA,SAASG,QAAT,CAAkB;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAlB,EAAuC;AAEnC,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAMa,QAAQ,GAAGH,aAAa,CAACI,QAAQ,CAACH,EAAD,CAAT,CAA9B;AAEA,SACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,MAAd;AAAqB,IAAA,SAAS,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAC,MAAhB;AAAuB,IAAA,SAAS,EAAEC,OAAO,CAACX,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYY,QAAQ,CAACE,KAArB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcF,QAAQ,CAACG,QAAvB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcH,QAAQ,CAACI,QAAvB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,QAAQ,CAACK,MAAb,CAJJ,CADJ,CADA,CADJ;AAaH;;AAED,eAAeT,QAAf","sourcesContent":["import React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(({\n    paper : {\n        maxWidth : 500,\n        display : 'flex',\n        justifyContent : 'center',\n        alignItems : 'center',\n        flexDirection : 'column', \n        marginTop : 20\n    },\n    Grid : {\n        display: 'flex',\n        alignItems :'center',\n        flexDirection : 'row',\n\n    }\n}))\n\n\nfunction Question({getquestionid, id}) {\n    \n    const classes = useStyles();\n    const question = getquestionid(parseInt(id));\n\n    return(\n        <Container maxWidth=\"sm\">\n        <Box maxWidth=\"100%\" component=\"div\">\n            <Paper maxWidth=\"100%\" className={classes.paper}>\n                <h1>Title: {question.title}</h1>\n                <p>Question: {question.subtitle}</p>\n                <p>Category: {question.category}</p>\n                <p>{question.upVote}</p>\n            </Paper>\n        </Box>\n        </Container>\n   \n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}