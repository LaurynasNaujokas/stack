{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/Question.js\";\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { CardContent, CardHeader } from '@material-ui/core';\nimport CardIcons from './CardIcons';\nimport Loading from './Loading';\nimport QuestionCardContent from './QuestionCardContent';\nconst useStyles = makeStyles({\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  Grid: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  Box: {\n    backgroundColor: 'red'\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  favoriteIcon: {\n    color: \"red\"\n  }\n});\n\nfunction Question({\n  getquestionid,\n  id\n}) {\n  const classes = useStyles();\n  const question = getquestionid(id);\n  console.log(question);\n  const content = !question ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }) : React.createElement(Grid, {\n    container: true,\n    space: 1,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: question.title,\n    subheader: question.category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(QuestionCardContent, {\n    question: question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(CardIcons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))));\n  return content;\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/Question.js"],"names":["React","Grid","Card","Typography","makeStyles","CardContent","CardHeader","CardIcons","Loading","QuestionCardContent","useStyles","card","display","flexDirection","alignItems","justifyContent","marginTop","Box","backgroundColor","spaceBetween","favoriteIcon","color","Question","getquestionid","id","classes","question","console","log","content","title","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,mBAAxC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAE;AAC1BO,EAAAA,IAAI,EAAG;AACHC,IAAAA,OAAO,EAAG,MADP;AAEHC,IAAAA,aAAa,EAAG,QAFb;AAGHC,IAAAA,UAAU,EAAG,QAHV;AAIHC,IAAAA,cAAc,EAAG,QAJd;AAKHC,IAAAA,SAAS,EAAG;AALT,GADmB;AAQ1Bf,EAAAA,IAAI,EAAG;AACHW,IAAAA,OAAO,EAAE,MADN;AAEHE,IAAAA,UAAU,EAAE,QAFT;AAGHD,IAAAA,aAAa,EAAG;AAHb,GARmB;AAa1BI,EAAAA,GAAG,EAAG;AACFC,IAAAA,eAAe,EAAG;AADhB,GAboB;AAgB1BC,EAAAA,YAAY,EAAG;AACXP,IAAAA,OAAO,EAAE,MADE;AAEXG,IAAAA,cAAc,EAAG;AAFN,GAhBW;AAoB1BK,EAAAA,YAAY,EAAG;AACXC,IAAAA,KAAK,EAAE;AADI;AApBW,CAAF,CAA5B;;AAyBA,SAASC,QAAT,CAAkB;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAlB,EAAuC;AACnC,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAMgB,QAAQ,GAAGH,aAAa,CAACC,EAAD,CAA9B;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,QAAMG,OAAO,GAAI,CAACH,QAAF,GAAe,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,GAEZ,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAE,CAAvB;AAA0B,IAAA,OAAO,EAAC,QAAlC;AAA2C,IAAA,UAAU,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAO,IAAA,SAAS,EAAED,OAAO,CAACd,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAEe,QAAQ,CAACI,KADpB;AAEI,IAAA,SAAS,EAAEJ,QAAQ,CAACK,QAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,mBAAD;AAAqB,IAAA,QAAQ,EAAEL,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,EASI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ,CADJ,CAFJ;AAkBA,SAAOG,OAAP;AACH;;AAED,eAAeP,QAAf","sourcesContent":["import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { CardContent, CardHeader } from '@material-ui/core';\n\nimport CardIcons from './CardIcons';\nimport Loading from './Loading';\nimport QuestionCardContent from './QuestionCardContent';\n\nconst useStyles = makeStyles(({\n    card : {\n        display : 'flex',\n        flexDirection : 'column', \n        alignItems : 'center',\n        justifyContent : 'center',\n        marginTop : 20,\n    },\n    Grid : {\n        display: 'flex',\n        alignItems :'center',\n        flexDirection : 'row',\n    },\n    Box : {\n        backgroundColor : 'red',\n    },\n    spaceBetween : {\n        display: 'flex',\n        justifyContent : 'space-between'\n    },\n    favoriteIcon : {\n        color: \"red\"\n    }\n}))\n\nfunction Question({getquestionid, id}) {    \n    const classes = useStyles();\n    const question = getquestionid(id);\n\n\n    console.log(question);\n\n    const content = (!question) ?  <Loading /> :  \n\n        <Grid container space={1} justify=\"center\" alignItems=\"center\">\n            <Grid item>\n                <Card  className={classes.card}>\n                    <CardHeader\n                        title={question.title}\n                        subheader={question.category}\n                    >\n                    </CardHeader>\n                    <CardContent >\n                        <QuestionCardContent question={question} />\n                    </CardContent>\n                    <CardIcons />\n                </Card>     \n            </Grid>\n        </Grid>\n\n    return content;\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}