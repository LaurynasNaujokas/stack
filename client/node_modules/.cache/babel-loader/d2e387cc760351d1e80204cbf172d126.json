{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Questions.js\";\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"@reach/router\";\n\nfunction Questions({\n  questions\n}) {\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Questions\"), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, questions.map((question, index) => {\n    return React.createElement(Link, {\n      id: question.id,\n      key: index,\n      questions: questions,\n      index: index,\n      question: question,\n      upVote: upVote,\n      to: \"/question/\".concat(question.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, question.title, React.createElement(\"p\", {\n      onClick: () => upVote(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, question.upVote));\n  })));\n}\n\nexport default Questions;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Questions.js"],"names":["React","Grid","Link","Questions","questions","map","question","index","id","upVote","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,IAAR,QAAmB,eAAnB;;AAEA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA+B;AAE3B,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEA,oBAAC,IAAD;AAAO,IAAA,SAAS,MAAhB;AAAiB,IAAA,IAAI,MAArB;AAAsB,IAAA,EAAE,EAAE,EAA1B;AAA8B,IAAA,OAAO,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,SAAS,CAACC,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAChC,WAEI,oBAAC,IAAD;AACI,MAAA,EAAE,EAAED,QAAQ,CAACE,EADjB;AAEI,MAAA,GAAG,EAAED,KAFT;AAGI,MAAA,SAAS,EAAEH,SAHf;AAII,MAAA,KAAK,EAAEG,KAJX;AAKI,MAAA,QAAQ,EAAED,QALd;AAMI,MAAA,MAAM,EAAEG,MANZ;AAOI,MAAA,EAAE,sBAAeH,QAAQ,CAACE,EAAxB,CAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOqCF,QAAQ,CAACI,KAP9C,EAQI;AAAG,MAAA,OAAO,EAAE,MAAMD,MAAM,CAACF,KAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCD,QAAQ,CAACG,MAA3C,CARJ,CAFJ;AAeH,GAhBA,CADD,CAFA,CADJ;AA0BH;;AAGD,eAAeN,SAAf","sourcesContent":["import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport {Link} from \"@reach/router\";\n\nfunction Questions({questions}){\n\n    return(\n        <Grid container spacing={1}>\n            <h1>Questions</h1>\n        <Grid  container item xs={12} spacing={3}>\n        {questions.map((question, index) => {\n            return (\n                \n                <Link \n                    id={question.id}\n                    key={index}\n                    questions={questions}\n                    index={index}\n                    question={question}\n                    upVote={upVote}\n                    to={`/question/${question.id}`}>{question.title}  \n                    <p onClick={() => upVote(index)}>{question.upVote}</p>\n                </Link>   \n                \n                )\n                \n        }\n        )}\n        </Grid>\n        \n    </Grid>\n    )\n}\n\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}