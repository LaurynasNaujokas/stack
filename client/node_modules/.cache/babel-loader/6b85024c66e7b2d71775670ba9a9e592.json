{"ast":null,"code":"import _slicedToArray from \"/Users/laurynas/Desktop/ReactProjects/stackclone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Navigation from \"./components/Navigation\";\nimport AddQuestion from \"./components/AddQuestion\";\nimport Questions from \"./components/Questions\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1),\n    minWidth: 350,\n    minHeight: 200,\n    maxWidth: 500,\n    display: 'flex',\n    flexDirection: 'column',\n    color: theme.palette.text.secondary\n  },\n  questionGrid: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    marginTop: 30,\n    marginBottom: 30\n  },\n  text: {\n    padding: 10\n  }\n}));\nexport default function App() {\n  const classes = useStyles();\n  document.title = \"Stack Overflow\";\n\n  const _useState = useState([{\n    id: 0,\n    title: 'What is Javascript',\n    subtitle: 'I need more information about it',\n    category: 'Javascript',\n    upVote: 0,\n    answers: ['']\n  }, {\n    id: 1,\n    title: 'How to do map() function',\n    subtitle: 'Can someone tell how to do it step by step',\n    category: 'Angular',\n    upVote: 0,\n    answers: ['']\n  }, {\n    id: 2,\n    title: 'MongoDB or firebase?',\n    subtitle: 'Cant decide...',\n    category: 'React',\n    upVote: 0,\n    answers: ['']\n  }, {\n    id: 3,\n    title: 'Any good tutorials for ES6',\n    subtitle: 'Want to start practice, but dunno where',\n    category: 'Javascript',\n    upVote: 0,\n    answers: ['']\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        questions = _useState2[0],\n        setQuestions = _useState2[1];\n\n  const upVote = index => {\n    const newVote = [...questions];\n    newVote[index].upVote++;\n    setQuestions(newVote);\n  };\n\n  const addQuestion = value => {\n    const newQuestions = [...questions, value];\n    setQuestions(newQuestions);\n  }; //Categorizing questions --End\n\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Navigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Questions, {\n    questions: questions,\n    setQuestions: setQuestions,\n    classname: classes.questions,\n    upvote: upVote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(AddQuestion, {\n    addQuestion: addQuestion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/App.js"],"names":["React","useState","makeStyles","Navigation","AddQuestion","Questions","useStyles","theme","root","flexGrow","paper","padding","spacing","minWidth","minHeight","maxWidth","display","flexDirection","color","palette","text","secondary","questionGrid","justifyContent","marginTop","marginBottom","App","classes","document","title","id","subtitle","category","upVote","answers","questions","setQuestions","index","newVote","addQuestion","value","newQuestions"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport './App.css';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Navigation from \"./components/Navigation\";\nimport AddQuestion from \"./components/AddQuestion\";\nimport Questions from \"./components/Questions\";\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow : 1\n    },\n    paper: {\n        padding: theme.spacing(1),\n        minWidth : 350,\n        minHeight : 200,\n        maxWidth : 500,\n        display : 'flex',\n        flexDirection : 'column',\n        color: theme.palette.text.secondary,\n    },\n    questionGrid : {\n        display : 'flex',\n        justifyContent : 'space-around',\n        marginTop : 30,\n        marginBottom : 30\n    },\n    text : {\n        padding: 10\n    }\n}));\n\nexport default function App() {\nconst classes = useStyles();\n\n    document.title = \"Stack Overflow\";\n\n    const [questions, setQuestions] =  useState([\n        {\n            id : 0,\n            title : 'What is Javascript',\n            subtitle : 'I need more information about it',\n            category : 'Javascript',\n            upVote : 0,\n            answers : ['']\n        },\n        {\n            id : 1,\n            title : 'How to do map() function',\n            subtitle : 'Can someone tell how to do it step by step',\n            category : 'Angular',\n            upVote : 0,\n            answers : ['']\n        },{\n            id : 2,\n            title : 'MongoDB or firebase?',\n            subtitle : 'Cant decide...',\n            category : 'React',\n            upVote : 0,\n            answers : ['']\n        },{\n            id : 3,\n            title : 'Any good tutorials for ES6',\n            subtitle : 'Want to start practice, but dunno where',\n            category : 'Javascript',\n            upVote : 0,\n            answers : ['']\n        }\n    ]);\n\n        const upVote = index => {\n        const newVote = [...questions];\n        newVote[index].upVote++\n        setQuestions(newVote);\n    };\n\n\n    const addQuestion = value => {\n        const newQuestions = [...questions, value ];\n        setQuestions(newQuestions);\n    };\n    //Categorizing questions --End\n\n    return (\n    <div className={classes.root}>\n        <Navigation />\n        <Questions questions={questions} setQuestions={setQuestions} classname={classes.questions} upvote={upVote}/>\n        <AddQuestion addQuestion={addQuestion} />\n    </div>\n  );\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}