{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js\";\nimport React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction Question({\n  setQuestions,\n  questions,\n  question,\n  index\n}) {\n  const upVote = index => {\n    const newVote = [...questions];\n    newVote[index].upVote++;\n    setQuestions(newVote);\n  };\n\n  let content = React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Loading\");\n\n  if (question) {\n    content = React.createElement(Paper, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, question.category), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, question.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, question.subtitle, \"asdas\"), React.createElement(\"p\", {\n      onClick: () => upVote(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, question.upVote));\n  }\n\n  return content;\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js"],"names":["React","Paper","Question","setQuestions","questions","question","index","upVote","newVote","content","category","title","subtitle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,SAAhB;AAA0BC,EAAAA,QAA1B;AAAmCC,EAAAA;AAAnC,CAAlB,EAA4D;AAExD,QAAMC,MAAM,GAAGD,KAAK,IAAI;AACpB,UAAME,OAAO,GAAG,CAAC,GAAGJ,SAAJ,CAAhB;AACAI,IAAAA,OAAO,CAACF,KAAD,CAAP,CAAeC,MAAf;AACAJ,IAAAA,YAAY,CAACK,OAAD,CAAZ;AACH,GAJD;;AAMA,MAAIC,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAd;;AAGC,MAAGJ,QAAH,EAAa;AACbI,IAAAA,OAAO,GACJ,oBAAC,KAAD;AACI,MAAA,GAAG,EAAEH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,QAAQ,CAACK,QAAb,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,QAAQ,CAACM,KAAd,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIN,QAAQ,CAACO,QAAb,UALJ,EAMI;AAAG,MAAA,OAAO,EAAE,MAAML,MAAM,CAACD,KAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCD,QAAQ,CAACE,MAA3C,CANJ,CADH;AASC;;AACD,SAAOE,OAAP;AACJ;;AAGD,eAAeP,QAAf","sourcesContent":["import React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction Question({ setQuestions, questions,question,index}){\n\n    const upVote = index => {\n        const newVote = [...questions];\n        newVote[index].upVote++\n        setQuestions(newVote);\n    };\n\n    let content = <p>Loading</p>;\n\n  \n     if(question) {\n     content =\n        <Paper\n            key={index}\n        >\n            <p>{question.category}</p>\n            <h3>{question.title}</h3>\n            <p>{question.subtitle}asdas</p>\n            <p onClick={() => upVote(index)}>{question.upVote}</p>\n        </Paper>\n     }\n     return content;\n}\n\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}