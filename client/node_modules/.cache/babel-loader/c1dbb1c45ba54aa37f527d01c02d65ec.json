{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/Questions.js\";\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport Typpgraphy from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Link } from \"@reach/router\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport IconButton from \"@material-ui/core/IconButton\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 500,\n    minWidth: 250,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: 5,\n    padding: 20\n  },\n  Grid: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  Typography: {\n    marginTop: 20\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  icons: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  negativeIcon: {\n    color: 'red'\n  },\n  positiveIcon: {\n    color: 'green'\n  }\n}));\n\nfunction Questions({\n  questions,\n  upVote,\n  downVote\n}) {\n  const classes = useStyles();\n  let content = !questions ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"...Something went wrong\") : React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Typpgraphy, {\n    className: classes.Typography,\n    variant: \"h3\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Questions\"), React.createElement(Grid, {\n    justify: \"center\",\n    alignItems: \"center\",\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 1,\n    className: classes.Grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, questions.map((question, index) => {\n    return React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"p\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, question.title), React.createElement(Typography, {\n      variant: \"p\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, question.subtitle), React.createElement(Link, {\n      className: classes.paper,\n      id: question._id,\n      key: index,\n      index: index,\n      to: \"/question/\".concat(question._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"See more\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Votes: \", question.upVote), React.createElement(Box, {\n      className: classes.icons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: () => upVote(index),\n      \"aria-label\": \"Up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(ArrowUpward, {\n      className: question.upVote >= 0 ? classes.positiveIcon : classes.negativeIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      onClick: () => downVote(index),\n      \"aria-label\": \"Down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(ArrowDownward, {\n      className: question.upVote >= 0 ? classes.negativeIcon : classes.positiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })))));\n  })));\n  return content;\n}\n\nexport default Questions;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/Questions.js"],"names":["React","Grid","Typography","Card","Button","Typpgraphy","Box","Link","makeStyles","ArrowUpward","ArrowDownward","IconButton","useStyles","theme","card","maxWidth","minWidth","display","justifyContent","alignItems","flexDirection","margin","padding","flexWrap","marginTop","button","spacing","icons","negativeIcon","color","positiveIcon","Questions","questions","upVote","downVote","classes","content","map","question","index","title","subtitle","paper","_id","positiv"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport Typpgraphy from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport {Link} from \"@reach/router\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst useStyles = makeStyles( theme =>({\n    card : {\n        maxWidth : 500,\n        minWidth : 250,\n        display : 'flex',\n        justifyContent : 'center',\n        alignItems : 'center',\n        flexDirection : 'column', \n        margin : 5,\n        padding : 20\n    },\n    Grid : {\n        display: 'flex',\n        alignItems :'center',\n        flexDirection : 'row',\n        flexWrap : 'wrap'\n    },\n    Typography : {\n        marginTop : 20\n    },\n    button : {\n        margin: theme.spacing(1),\n    },\n    icons : {\n        display : 'flex',\n        flexDirection : 'row',\n        justifyContent : 'space-between'\n    },\n    negativeIcon : {\n        color : 'red'\n    },\n    positiveIcon : {\n        color : 'green'\n    }\n}));\n\nfunction Questions({questions, upVote, downVote}){\n\n    const classes = useStyles();\n   \n    let content = (!questions) ? <div>...Something went wrong</div> : \n \n        <Grid container justify=\"center\" alignItems=\"center\" xs={12}> \n            <Typpgraphy className={classes.Typography} variant=\"h3\" component=\"h2\" >Questions</Typpgraphy>\n        <Grid justify=\"center\" alignItems=\"center\" container item xs={12} spacing={1} className={classes.Grid}>\n        {questions.map((question, index) => {\n            return (        \n                <Box>\n                        <Card className={classes.card}>\n                                <Typography variant=\"p\" component=\"p\">{question.title}</Typography>\n                                    <Typography variant=\"p\" component=\"p\">{question.subtitle}</Typography>\n                                        <Link \n                                            className={classes.paper}\n                                            id={question._id}\n                                            key={index}\n                                            index={index}\n                                            to={`/question/${question._id}`}><Button color=\"primary\" className={classes.button}>See more</Button>    \n                                        </Link> \n                                    <p>Votes: {question.upVote}</p>\n                                <Box className={classes.icons}>\n                                    <IconButton onClick={() => upVote(index)} aria-label=\"Up\">\n                                        <ArrowUpward\n                                            className={(question.upVote >= 0) ? classes.positiveIcon : classes.negativeIcon}\n                                        />\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => downVote(index)} aria-label=\"Down\"\n                                    >\n                                        <ArrowDownward\n                                            className={(question.upVote >= 0) ? classes.negativeIcon : classes.positiv}\n                                        />\n                                    </IconButton>\n                                </Box>\n                        </Card>\n                </Box>\n                )\n            }\n        )}\n        </Grid>\n    </Grid>\n    return content;\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}