{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js\";\nimport React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction Question({\n  setQuestions,\n  questions,\n  question,\n  index,\n  id,\n  getQuestionId\n}) {\n  const upVote = index => {\n    const newVote = [...questions];\n    newVote[index].upVote++;\n    setQuestions(newVote);\n  };\n\n  const q = getQuestionId(id);\n  return React.createElement(Paper, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, q.category), React.createElement(\"p\", {\n    onClick: () => upVote(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, question.upVote));\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js"],"names":["React","Paper","Question","setQuestions","questions","question","index","id","getQuestionId","upVote","newVote","q","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,SAAhB;AAA0BC,EAAAA,QAA1B;AAAmCC,EAAAA,KAAnC;AAA0CC,EAAAA,EAA1C;AAA8CC,EAAAA;AAA9C,CAAlB,EAA+E;AAE3E,QAAMC,MAAM,GAAGH,KAAK,IAAI;AACpB,UAAMI,OAAO,GAAG,CAAC,GAAGN,SAAJ,CAAhB;AACAM,IAAAA,OAAO,CAACJ,KAAD,CAAP,CAAeG,MAAf;AACAN,IAAAA,YAAY,CAACO,OAAD,CAAZ;AACH,GAJD;;AAMA,QAAMC,CAAC,GAAGH,aAAa,CAACD,EAAD,CAAvB;AAEA,SAEI,oBAAC,KAAD;AACI,IAAA,GAAG,EAAED,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIK,CAAC,CAACC,QAAN,CAHJ,EAII;AAAG,IAAA,OAAO,EAAE,MAAMH,MAAM,CAACH,KAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCD,QAAQ,CAACI,MAA3C,CAJJ,CAFJ;AASH;;AAGD,eAAeP,QAAf","sourcesContent":["import React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction Question({ setQuestions, questions,question,index, id, getQuestionId}){\n\n    const upVote = index => {\n        const newVote = [...questions];\n        newVote[index].upVote++\n        setQuestions(newVote);\n    };\n\n    const q = getQuestionId(id);\n\n    return(\n        \n        <Paper\n            key={index}\n        >\n            <p>{q.category}</p>\n            <p onClick={() => upVote(index)}>{question.upVote}</p>\n        </Paper>\n    )\n}\n\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}