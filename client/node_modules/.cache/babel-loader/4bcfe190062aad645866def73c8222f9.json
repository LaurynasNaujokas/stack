{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Questions.js\";\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typpgraphy from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Link } from \"@reach/router\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nconst useStyles = makeStyles({\n  paper: {\n    maxWidth: 350,\n    minWidth: 250,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: 5,\n    padding: 20\n  },\n  Grid: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  Typography: {\n    marginTop: 20\n  }\n});\n\nfunction Questions({\n  questions,\n  upVote\n}) {\n  const classes = useStyles();\n  return React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Typpgraphy, {\n    className: classes.Typography,\n    variant: \"h3\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Questions\"), React.createElement(Grid, {\n    justify: \"center\",\n    alignItems: \"center\",\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 1,\n    className: classes.Grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, questions.map((question, index) => {\n    return React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: classes.paper,\n      id: question.id,\n      key: index,\n      question: question,\n      index: index,\n      to: \"/question/\".concat(question.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, question.title), React.createElement(\"p\", {\n      onClick: () => upVote(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, question.upVote)));\n  })));\n}\n\nexport default Questions;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Questions.js"],"names":["React","Grid","Paper","Typpgraphy","Box","Link","makeStyles","useStyles","paper","maxWidth","minWidth","display","justifyContent","alignItems","flexDirection","margin","padding","Typography","marginTop","Questions","questions","upVote","classes","map","question","index","id","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAAQC,IAAR,QAAmB,eAAnB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAE;AAC1BE,EAAAA,KAAK,EAAG;AACJC,IAAAA,QAAQ,EAAG,GADP;AAEJC,IAAAA,QAAQ,EAAG,GAFP;AAGJC,IAAAA,OAAO,EAAG,MAHN;AAIJC,IAAAA,cAAc,EAAG,QAJb;AAKJC,IAAAA,UAAU,EAAG,QALT;AAMJC,IAAAA,aAAa,EAAG,QANZ;AAOJC,IAAAA,MAAM,EAAG,CAPL;AAQJC,IAAAA,OAAO,EAAG;AARN,GADkB;AAW1Bf,EAAAA,IAAI,EAAG;AACHU,IAAAA,OAAO,EAAE,MADN;AAEHE,IAAAA,UAAU,EAAE,QAFT;AAGHC,IAAAA,aAAa,EAAG;AAHb,GAXmB;AAgB1BG,EAAAA,UAAU,EAAG;AACTC,IAAAA,SAAS,EAAG;AADH;AAhBa,CAAF,CAA5B;;AAqBA,SAASC,SAAT,CAAmB;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAnB,EAAuC;AAEnC,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,UAAU,EAAC,QAA5C;AAAqD,IAAA,EAAE,EAAE,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEe,OAAO,CAACL,UAA/B;AAA2C,IAAA,OAAO,EAAC,IAAnD;AAAwD,IAAA,SAAS,EAAC,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEA,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,QAAd;AAAuB,IAAA,UAAU,EAAC,QAAlC;AAA4C,IAAA,SAAS,MAArD;AAAsD,IAAA,IAAI,MAA1D;AAA2D,IAAA,EAAE,EAAE,EAA/D;AAAmE,IAAA,OAAO,EAAE,CAA5E;AAA+E,IAAA,SAAS,EAAEK,OAAO,CAACrB,IAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCmB,SAAS,CAACG,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAChC,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEH,OAAO,CAACd,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AACI,MAAA,SAAS,EAAEc,OAAO,CAACd,KADvB;AAEI,MAAA,EAAE,EAAEgB,QAAQ,CAACE,EAFjB;AAGI,MAAA,GAAG,EAAED,KAHT;AAII,MAAA,QAAQ,EAAED,QAJd;AAKI,MAAA,KAAK,EAAEC,KALX;AAMI,MAAA,EAAE,sBAAeD,QAAQ,CAACE,EAAxB,CANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMqCF,QAAQ,CAACG,KAN9C,CADJ,EASQ;AAAG,MAAA,OAAO,EAAE,MAAMN,MAAM,CAACI,KAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCD,QAAQ,CAACH,MAA3C,CATR,CADJ,CADJ;AAeH,GAhBA,CADD,CAFA,CADJ;AAyBH;;AAGD,eAAeF,SAAf","sourcesContent":["import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Typpgraphy from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport {Link} from \"@reach/router\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(({\n    paper : {\n        maxWidth : 350,\n        minWidth : 250,\n        display : 'flex',\n        justifyContent : 'center',\n        alignItems : 'center',\n        flexDirection : 'column', \n        margin : 5,\n        padding : 20\n    },\n    Grid : {\n        display: 'flex',\n        alignItems :'center',\n        flexDirection : 'row',\n    },\n    Typography : {\n        marginTop : 20\n    }\n}));\n\nfunction Questions({questions, upVote}){\n\n    const classes = useStyles();\n\n    return(\n        <Grid container justify=\"center\" alignItems=\"center\" xs={12}> \n            <Typpgraphy className={classes.Typography} variant=\"h3\" component=\"h2\" >Questions</Typpgraphy>\n        <Grid justify=\"center\" alignItems=\"center\"  container item xs={12} spacing={1} className={classes.Grid}>\n        {questions.map((question, index) => {\n            return (    \n                <Box >\n                    <Paper className={classes.paper} >\n                        <Link \n                            className={classes.paper}\n                            id={question.id}\n                            key={index}\n                            question={question}\n                            index={index}\n                            to={`/question/${question.id}`}>{question.title}     \n                        </Link> \n                            <p onClick={() => upVote(index)}>{question.upVote}</p>   \n                    </Paper>\n                </Box>\n                )\n        }\n        )}\n        </Grid>\n    </Grid>\n    )\n}\n\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}