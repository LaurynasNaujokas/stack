{"ast":null,"code":"import _slicedToArray from \"/Users/laurynas/Desktop/ReactProjects/stackclone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Navigation from \"./components/Navigation\";\nimport AddQuestion from \"./components/AddQuestion\";\nimport Question from \"./components/Question\";\nimport { Typography } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1),\n    minWidth: 350,\n    minHeight: 200,\n    maxWidth: 500,\n    display: 'flex',\n    flexDirection: 'column',\n    color: theme.palette.text.secondary\n  },\n  questionGrid: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    marginTop: 30,\n    marginBottom: 30\n  },\n  text: {\n    padding: 20\n  }\n}));\nexport default function App() {\n  const classes = useStyles();\n  document.title = \"Stack Overflow\";\n\n  const _useState = useState([{\n    id: 0,\n    title: 'What is Javascript',\n    subtitle: 'I need more information about it',\n    category: 'Javascript',\n    upVote: 0,\n    answers: ['']\n  }, {\n    id: 1,\n    title: 'How to do map() function',\n    subtitle: 'Can someone tell how to do it step by step',\n    category: 'Javascript',\n    upVote: 0,\n    answers: ['']\n  }, {\n    id: 2,\n    title: 'MongoDB or firebase?',\n    subtitle: 'Cant decide...',\n    category: 'Databases',\n    upVote: 0,\n    answers: ['']\n  }, {\n    id: 3,\n    title: 'Any good tutorials for ES6',\n    subtitle: 'Want to start practice, but dunno where',\n    category: 'Javascript',\n    upVote: 0,\n    answers: ['']\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        questions = _useState2[0],\n        setQuestions = _useState2[1]; //Try in question function component\n\n\n  const upVote = id => {\n    const newVote = [...questions];\n    newVote[id].upVote++;\n    setQuestions(newVote);\n  };\n\n  const addQuestion = value => {\n    const newQuestions = [...questions, value];\n    setQuestions(newQuestions);\n    console.log(newQuestions);\n  }; //Categorizing questions\n\n\n  let javascriptCategory = questions.filter(function (el) {\n    return el.category === \"Javascript\";\n  });\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Navigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"All questions\"), React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.questionGrid,\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, questions.map((question, index) => {\n    return React.createElement(Question, {\n      classname: classes.question,\n      key: question.id,\n      index: index,\n      question: question,\n      upVote: upVote,\n      questions: questions,\n      classes: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    });\n  }))), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Javascript related\"), React.createElement(Grid, {\n    className: classes.questionGrid,\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, javascriptCategory.map((jav, index) => {\n    return React.createElement(Paper, {\n      key: index,\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, jav.category), React.createElement(Typography, {\n      className: classes.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, jav.title), React.createElement(Typography, {\n      className: classes.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, jav.subtitle));\n  })), React.createElement(AddQuestion, {\n    addQuestion: addQuestion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/App.js"],"names":["React","useState","Grid","Paper","makeStyles","Navigation","AddQuestion","Question","Typography","useStyles","theme","root","flexGrow","paper","padding","spacing","minWidth","minHeight","maxWidth","display","flexDirection","color","palette","text","secondary","questionGrid","justifyContent","marginTop","marginBottom","App","classes","document","title","id","subtitle","category","upVote","answers","questions","setQuestions","newVote","addQuestion","value","newQuestions","console","log","javascriptCategory","filter","el","map","question","index","jav"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nimport Navigation from \"./components/Navigation\";\nimport AddQuestion from \"./components/AddQuestion\";\nimport Question from \"./components/Question\";\nimport {Typography} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow : 1\n    },\n    paper: {\n        padding: theme.spacing(1),\n        minWidth : 350,\n        minHeight : 200,\n        maxWidth : 500,\n        display : 'flex',\n        flexDirection : 'column',\n        color: theme.palette.text.secondary,\n    },\n    questionGrid : {\n        display : 'flex',\n        justifyContent : 'space-around',\n        marginTop : 30,\n        marginBottom : 30\n    },\n    text : {\n        padding: 20\n    }\n}));\n\nexport default function App() {\nconst classes = useStyles();\n\n    document.title = \"Stack Overflow\";\n    const [questions, setQuestions] =  useState([\n        {\n            id : 0,\n            title : 'What is Javascript',\n            subtitle : 'I need more information about it',\n            category : 'Javascript',\n            upVote : 0,\n            answers : ['']\n        },\n        {\n            id : 1,\n            title : 'How to do map() function',\n            subtitle : 'Can someone tell how to do it step by step',\n            category : 'Javascript',\n            upVote : 0,\n            answers : ['']\n        },{\n            id : 2,\n            title : 'MongoDB or firebase?',\n            subtitle : 'Cant decide...',\n            category : 'Databases',\n            upVote : 0,\n            answers : ['']\n        },{\n            id : 3,\n            title : 'Any good tutorials for ES6',\n            subtitle : 'Want to start practice, but dunno where',\n            category : 'Javascript',\n            upVote : 0,\n            answers : ['']\n        }\n    ]);\n\n    //Try in question function component\n    const upVote = id => {\n        const newVote = [...questions];\n        newVote[id].upVote++;\n        setQuestions(newVote);\n    };\n\n\n    const addQuestion = value => {\n        const newQuestions = [...questions, value ];\n        setQuestions(newQuestions);\n        console.log(newQuestions);\n    };\n\n    //Categorizing questions\n    let javascriptCategory = questions.filter(function (el) {\n        return el.category === \"Javascript\";\n    });\n\n\n\n\n    return (\n    <div className={classes.root}>\n        <Navigation />\n        <h1>All questions</h1>\n        <Grid container spacing={1}>\n            <Grid className={classes.questionGrid} container item xs={12} spacing={3}>\n            {questions.map((question, index) => {\n                return (\n                        <Question\n                        classname={classes.question}\n                        key={question.id}\n                        index={index}\n                        question={question}\n                        upVote={upVote}\n                        questions={questions}\n                        classes={classes}\n                        />\n                    )\n            })}\n            </Grid>\n        </Grid>\n        <h1>Javascript related</h1>\n        <Grid className={classes.questionGrid} container item xs={12} spacing={3}>\n\n            {javascriptCategory.map((jav,index) => {\n                return (\n                    <Paper\n                        key={index}\n                        className={classes.paper}\n                    >\n\n                        <Typography className={classes.text}>{jav.category}</Typography>\n                        <Typography className={classes.text}>{jav.title}</Typography>\n                        <Typography className={classes.text}>{jav.subtitle}</Typography>\n                    </Paper>\n                )\n            })}\n\n        </Grid>\n        <AddQuestion addQuestion={addQuestion} />\n    </div>\n  );\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}