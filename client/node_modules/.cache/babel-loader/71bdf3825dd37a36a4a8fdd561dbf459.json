{"ast":null,"code":"import _slicedToArray from \"/Users/laurynas/Desktop/ReactProjects/stackclone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/AskQuestion.js\";\nimport React, { useState } from 'react';\n\nconst _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\nfunction addQuestion({}) {\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addQuestion(value);\n    setValue('');\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n}\n\nexport default addQuestion();","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/AskQuestion.js"],"names":["React","useState","value","setValue","addQuestion","handleSubmit","e","preventDefault","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;kBAE0BA,QAAQ,CAAC,EAAD,C;;MAA3BC,K;MAAOC,Q;;AAEd,SAASC,WAAT,CAAqB,EAArB,EAAwB;AAEpB,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAG,CAACL,KAAJ,EAAW;AACXE,IAAAA,WAAW,CAACF,KAAD,CAAX;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GALD;;AAOA,SACI;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEH,KAA1B;AAAiC,IAAA,QAAQ,EAAGI,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACE,MAAF,CAASN,KAAV,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AAGD,eAAeE,WAAW,EAA1B","sourcesContent":["import React, {useState} from 'react';\n\nconst [value, setValue] = useState('');\n\nfunction addQuestion({}){\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(!value) return;\n        addQuestion(value);\n        setValue('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} />\n        </form>\n    )\n}\n\n\nexport default addQuestion();\n"]},"metadata":{},"sourceType":"module"}