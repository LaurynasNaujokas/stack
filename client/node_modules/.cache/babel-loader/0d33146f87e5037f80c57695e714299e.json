{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js\";\nimport React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction Question({\n  getquestionid,\n  id\n}) {\n  const q = getquestionid(parseInt(id));\n  console.log(q);\n  return React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Title: \", q.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \" Category: \", q.category), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Question: \", q.subtitle), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, q.upVote));\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js"],"names":["React","Paper","Question","getquestionid","id","q","parseInt","console","log","title","category","subtitle","upVote"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAGA,SAASC,QAAT,CAAkB;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAlB,EAAuC;AAEnC,QAAMC,CAAC,GAAGF,aAAa,CAACG,QAAQ,CAACF,EAAD,CAAT,CAAvB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAEA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYA,CAAC,CAACI,KAAd,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeJ,CAAC,CAACK,QAAjB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeL,CAAC,CAACM,QAAjB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,CAAC,CAACO,MAAN,CAJJ,CADJ;AAQH;;AAED,eAAeV,QAAf","sourcesContent":["import React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\n\n\nfunction Question({getquestionid, id}) {\n    \n    const q = getquestionid(parseInt(id));\n    console.log(q);\n\n    return(\n        <Paper>\n            <h2>Title: {q.title}</h2>\n            <p> Category: {q.category}</p>\n            <h2>Question: {q.subtitle}</h2>\n            <p>{q.upVote}</p>\n        </Paper>\n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}