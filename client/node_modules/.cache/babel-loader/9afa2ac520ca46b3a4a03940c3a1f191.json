{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Questions.js\";\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typpgraphy from \"@material-ui/core/Typography\";\nimport { Link } from \"@reach/router\";\n\nfunction Questions({\n  questions,\n  upVote\n}) {\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Typpgraphy, {\n    variant: \"h3\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Questions\"), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, questions.map((question, index) => {\n    return React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Link, {\n      id: question.id,\n      key: index,\n      question: question,\n      index: index,\n      to: \"/question/\".concat(question.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, question.title), React.createElement(\"p\", {\n      onClick: () => upVote(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, question.upVote));\n  })));\n}\n\nexport default Questions;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Questions.js"],"names":["React","Grid","Paper","Typpgraphy","Link","Questions","questions","upVote","map","question","index","id","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,IAAR,QAAmB,eAAnB;;AAEA,SAASC,SAAT,CAAmB;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAnB,EAAuC;AAEnC,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEA,oBAAC,IAAD;AAAO,IAAA,SAAS,MAAhB;AAAiB,IAAA,IAAI,MAArB;AAAsB,IAAA,EAAE,EAAE,EAA1B;AAA8B,IAAA,OAAO,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,SAAS,CAACE,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAChC,WAEQ,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AACI,MAAA,EAAE,EAAED,QAAQ,CAACE,EADjB;AAEI,MAAA,GAAG,EAAED,KAFT;AAGI,MAAA,QAAQ,EAAED,QAHd;AAII,MAAA,KAAK,EAAEC,KAJX;AAKI,MAAA,EAAE,sBAAeD,QAAQ,CAACE,EAAxB,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKqCF,QAAQ,CAACG,KAL9C,CADJ,EAQQ;AAAG,MAAA,OAAO,EAAE,MAAML,MAAM,CAACG,KAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCD,QAAQ,CAACF,MAA3C,CARR,CAFR;AAcH,GAfA,CADD,CAFA,CADJ;AAyBH;;AAGD,eAAeF,SAAf","sourcesContent":["import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typpgraphy from \"@material-ui/core/Typography\";\nimport {Link} from \"@reach/router\";\n\nfunction Questions({questions, upVote}){\n\n    return(\n        <Grid container spacing={3}>\n            <Typpgraphy variant=\"h3\" component=\"h2\" >Questions</Typpgraphy>\n        <Grid  container item xs={12} spacing={3}>\n        {questions.map((question, index) => {\n            return (    \n              \n                    <Paper >\n                        <Link \n                            id={question.id}\n                            key={index}\n                            question={question}\n                            index={index}\n                            to={`/question/${question.id}`}>{question.title}     \n                        </Link> \n                            <p onClick={() => upVote(index)}>{question.upVote}</p>   \n                    </Paper>\n             \n                )\n        }\n        )}\n        </Grid>\n        \n    </Grid>\n    )\n}\n\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}