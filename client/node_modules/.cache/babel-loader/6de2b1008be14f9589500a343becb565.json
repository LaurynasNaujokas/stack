{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/Questions.js\";\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport Box from \"@material-ui/core/Box\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport ArrowCounter from './ArrowCounter';\nimport CardTitle from './CardTitle';\nimport CardLinkButton from './CardLinkButton';\nimport Loading from './Loading';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 500,\n    minWidth: 500,\n    maxHeight: 250,\n    minHeight: 250,\n    marginBottom: 40,\n    marginTop: 40,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: 5,\n    padding: 20\n  },\n  title: {\n    display: 'flex',\n    background: 'whitesmoke',\n    borderRadius: 3,\n    padding: 20,\n    position: 'absolute',\n    top: 20\n  },\n  Grid: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  Typography: {\n    marginTop: 20\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  icons: {\n    width: 400,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  negativeIcon: {\n    color: 'red'\n  },\n  positiveIcon: {\n    color: 'green'\n  }\n}));\n\nfunction Questions({\n  questions,\n  upVote,\n  downVote\n}) {\n  const classes = useStyles();\n  let content = !questions ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }) : React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.Typography,\n    variant: \"h3\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Questions\"), React.createElement(Grid, {\n    justify: \"center\",\n    alignItems: \"center\",\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 1,\n    className: classes.Grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, questions.map((question, index) => {\n    return React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      classes: classes,\n      question: question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(CardLinkButton, {\n      classes: classes,\n      index: index,\n      question: question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Votes: \", question.upVote), React.createElement(ArrowCounter, {\n      upVote: upVote,\n      downVote: downVote,\n      classes: classes,\n      question: question,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  })));\n  return content;\n}\n\nexport default Questions;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/Questions.js"],"names":["React","Grid","Typography","Card","Box","makeStyles","ArrowCounter","CardTitle","CardLinkButton","Loading","useStyles","theme","card","maxWidth","minWidth","maxHeight","minHeight","marginBottom","marginTop","display","justifyContent","alignItems","flexDirection","margin","padding","title","background","borderRadius","position","top","flexWrap","button","spacing","icons","width","negativeIcon","color","positiveIcon","Questions","questions","upVote","downVote","classes","content","map","question","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport Box from \"@material-ui/core/Box\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nimport ArrowCounter from './ArrowCounter';\nimport CardTitle from './CardTitle';\nimport CardLinkButton from './CardLinkButton';\nimport Loading from './Loading';\n\nconst useStyles = makeStyles( theme =>({\n    card : {\n        maxWidth : 500,\n        minWidth : 500,\n        maxHeight : 250,\n        minHeight : 250,\n        marginBottom : 40,\n        marginTop : 40,\n        display : 'flex',\n        justifyContent : 'center',\n        alignItems : 'center',\n        flexDirection : 'column', \n        margin : 5,\n        padding : 20\n    },\n    title : {\n        display : 'flex',\n        background : 'whitesmoke',\n        borderRadius : 3,\n        padding : 20,\n        position : 'absolute',\n        top : 20\n    },\n    Grid : {\n        display: 'flex',\n        alignItems :'center',\n        flexDirection : 'row',\n        flexWrap : 'wrap'\n    },\n    Typography : {\n        marginTop : 20\n    },\n    button : {\n        margin: theme.spacing(1),\n    },\n    icons : {\n        width: 400,\n        display : 'flex',\n        flexDirection : 'row',\n        justifyContent : 'space-between'\n    },\n    negativeIcon : {\n        color : 'red'\n    },\n    positiveIcon : {\n        color : 'green'\n    }\n}));\n\nfunction Questions({questions, upVote, downVote}){\n\n    const classes = useStyles();\n   \n    \n    let content = (!questions) ? <Loading /> : \n \n        <Grid container justify=\"center\" alignItems=\"center\" xs={12}> \n            <Typography className={classes.Typography} variant=\"h3\" component=\"h2\" >Questions</Typography>\n        <Grid justify=\"center\" alignItems=\"center\" container item xs={12} spacing={1} className={classes.Grid}>\n        {questions.map((question, index) => {\n            \n            return (        \n                <Box>\n                        <Card className={classes.card}>\n                                <CardTitle \n                                    classes={classes}\n                                    question={question}\n                                />\n                                <CardLinkButton \n                                    classes={classes}\n                                    index={index}\n                                    question={question}\n                                />\n                                    <p>Votes: {question.upVote}</p>\n                                <ArrowCounter\n                                    upVote={upVote}\n                                    downVote={downVote}\n                                    classes={classes}\n                                    question={question}\n                                    index={index}\n                                />\n                        </Card>\n                </Box>\n                )\n            }\n        )}\n        </Grid>\n    </Grid>\n    return content;\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}