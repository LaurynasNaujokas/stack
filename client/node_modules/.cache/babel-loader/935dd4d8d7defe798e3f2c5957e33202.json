{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js\";\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { CardContent } from '@material-ui/core';\nconst useStyles = makeStyles({\n  paper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    marginTop: 20\n  },\n  Grid: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  Box: {\n    backgroundColor: 'red'\n  }\n});\n\nfunction Question({\n  getquestionid,\n  id\n}) {\n  const classes = useStyles();\n  const question = getquestionid(parseInt(id));\n  return React.createElement(Grid, {\n    container: true,\n    space: 1,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Title: \", question.title), React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Question: \", question.subtitle), React.createElement(Typography, {\n    variant: \"p\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Category: \", question.category), React.createElement(Typography, {\n    variant: \"p\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, question.upVote)))));\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Question.js"],"names":["React","Grid","Card","Typography","makeStyles","CardContent","useStyles","paper","display","justifyContent","alignItems","flexDirection","marginTop","Box","backgroundColor","Question","getquestionid","id","classes","question","parseInt","title","subtitle","category","upVote"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAE;AAC1BG,EAAAA,KAAK,EAAG;AACJC,IAAAA,OAAO,EAAG,MADN;AAEJC,IAAAA,cAAc,EAAG,QAFb;AAGJC,IAAAA,UAAU,EAAG,QAHT;AAIJC,IAAAA,aAAa,EAAG,QAJZ;AAKJC,IAAAA,SAAS,EAAG;AALR,GADkB;AAQ1BX,EAAAA,IAAI,EAAG;AACHO,IAAAA,OAAO,EAAE,MADN;AAEHE,IAAAA,UAAU,EAAE,QAFT;AAGHC,IAAAA,aAAa,EAAG;AAHb,GARmB;AAa1BE,EAAAA,GAAG,EAAG;AACFC,IAAAA,eAAe,EAAG;AADhB;AAboB,CAAF,CAA5B;;AAmBA,SAASC,QAAT,CAAkB;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAlB,EAAuC;AAEnC,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAMa,QAAQ,GAAGH,aAAa,CAACI,QAAQ,CAACH,EAAD,CAAT,CAA9B;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAE,CAAvB;AAA0B,IAAA,OAAO,EAAC,QAAlC;AAA2C,IAAA,UAAU,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACYE,QAAQ,CAACE,KADrB,CADJ,EAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeF,QAAQ,CAACG,QADxB,CAJJ,EAOI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,GAApB;AAAwB,IAAA,SAAS,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeH,QAAQ,CAACI,QADxB,CAPJ,EAUI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,GAApB;AAAwB,IAAA,SAAS,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,QAAQ,CAACK,MADd,CAVJ,CADJ,CADJ,CADJ,CADJ;AAuBH;;AAED,eAAeT,QAAf","sourcesContent":["import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { CardContent } from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n    paper : {\n        display : 'flex',\n        justifyContent : 'center',\n        alignItems : 'center',\n        flexDirection : 'column', \n        marginTop : 20\n    },\n    Grid : {\n        display: 'flex',\n        alignItems :'center',\n        flexDirection : 'row',\n    },\n    Box : {\n        backgroundColor : 'red',\n    }\n}))\n\n\nfunction Question({getquestionid, id}) {\n    \n    const classes = useStyles();\n    const question = getquestionid(parseInt(id));\n\n    return(\n        <Grid container space={1} justify=\"center\" alignItems=\"center\">\n            <Grid item>\n                <Card >\n                    <CardContent>\n                        <Typography variant=\"h3\" component=\"h1\">\n                            Title: {question.title}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h6\">\n                            Question: {question.subtitle}\n                        </Typography>\n                        <Typography variant=\"p\" component=\"p\">\n                            Category: {question.category}\n                        </Typography>\n                        <Typography variant=\"p\" component=\"p\">\n                            {question.upVote}\n                        </Typography>\n                    </CardContent>\n                </Card>     \n            </Grid>\n        </Grid>\n   \n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}