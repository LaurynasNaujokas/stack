{"ast":null,"code":"import _defineProperty from \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/AddQuestion.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction AddQuestion() {\n  const _useState = useState({\n    title: '',\n    subtitle: '',\n    category: '',\n    upVotes: 0,\n    isCompleted: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const url = 'http://localhost:8080/api/v1/questions'; //Posting input state to api\n\n  const handleApi = e => {\n    e.preventDefault();\n\n    (async () => {\n      const rawResponse = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: value.title,\n          subtitle: value.subtitle,\n          category: value.category\n        })\n      });\n      const content = await rawResponse.json();\n      console.log(content);\n    })();\n  };\n\n  const onChange = event => {\n    setValue(_objectSpread({}, value, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const classes = useStyles();\n  return React.createElement(\"form\", {\n    className: classes.container,\n    onSubmit: handleApi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textField,\n    id: \"standard-basic\",\n    margin: \"normal\",\n    value: value.title,\n    name: \"title\",\n    onChange: onChange,\n    placeholder: \"Enter your title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textField,\n    id: \"standard-basic\",\n    margin: \"normal\",\n    value: value.subtitle,\n    name: \"subtitle\",\n    onChange: onChange,\n    placeholder: \"Enter your subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textField,\n    id: \"standard-basic\",\n    margin: \"normal\",\n    value: value.category,\n    name: \"category\",\n    onChange: onChange,\n    placeholder: \"Choose category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleApi,\n    variant: \"outlined\",\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Submit Question\")));\n}\n\nexport default AddQuestion;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/AddQuestion.js"],"names":["React","useState","TextField","makeStyles","Button","useStyles","theme","container","display","flexWrap","alignItems","justifyContent","textField","marginLeft","spacing","marginRight","width","button","margin","AddQuestion","title","subtitle","category","upVotes","isCompleted","value","setValue","url","handleApi","e","preventDefault","rawResponse","fetch","method","headers","body","JSON","stringify","content","json","console","log","onChange","event","target","name","classes"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles( theme => ({\n    container : {\n        display : 'flex',\n        flexWrap : 'wrap',\n        alignItems : 'center',\n        justifyContent : 'center'\n    },\n    textField : {\n        marginLeft : theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200\n    },\n    button : {\n        margin : theme.spacing(1),\n    }\n}))\n\n\nfunction AddQuestion(){\n    const [value, setValue] = useState({\n        title : '',\n        subtitle : '',\n        category : '',\n        upVotes : 0,\n        isCompleted : false,\n    });\n\n    const url = 'http://localhost:8080/api/v1/questions';\n\n    //Posting input state to api\n    const handleApi = e => { \n        e.preventDefault();\n        (async () => {\n            const rawResponse = await fetch(url, {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                title: value.title,\n                subtitle: value.subtitle,\n                category : value.category\n            })\n            });\n            const content = await rawResponse.json();\n          \n            console.log(content);\n          })();\n       };\n\n    const onChange = (event) => {\n        setValue({ ...value, [event.target.name] : event.target.value});\n    }\n\n    const classes = useStyles();\n    return(\n        <form className={classes.container} onSubmit={handleApi}>\n            <div>\n                <TextField\n                    className={classes.textField}\n                    id=\"standard-basic\"\n                    margin=\"normal\"\n                    value={value.title}\n                    name=\"title\"\n                    onChange={onChange}\n                    placeholder=\"Enter your title\"\n                />\n            </div>\n            <div>\n                <TextField \n                    className={classes.textField}\n                    id=\"standard-basic\"\n                    margin=\"normal\"\n                    value={value.subtitle}\n                    name=\"subtitle\"\n                    onChange={onChange}\n                    placeholder=\"Enter your subtitle\"\n                />\n            </div>\n            <div>\n                <TextField\n                    className={classes.textField}\n                    id=\"standard-basic\"\n                    margin=\"normal\"         \n                    value={value.category}\n                    name=\"category\"\n                    onChange={onChange}\n                    placeholder=\"Choose category\"\n                />                \n                <Button \n                    onClick={handleApi}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    className={classes.button}\n                >Submit Question\n                </Button>\n            </div>\n        </form>\n    )\n}\n\nexport default AddQuestion;"]},"metadata":{},"sourceType":"module"}