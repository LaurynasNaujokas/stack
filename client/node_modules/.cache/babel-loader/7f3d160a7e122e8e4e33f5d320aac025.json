{"ast":null,"code":"import _slicedToArray from \"/Users/laurynas/Desktop/ReactProjects/stackclone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/AskQuestion.js\";\nimport React, { useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { Typography } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nconst useStyles = makeStyles({\n  button: {\n    marginTop: 20\n  }\n});\n\nconst AskQuestion = props => {\n  const _useState = useState(props.questions),\n        _useState2 = _slicedToArray(_useState, 2),\n        questions = _useState2[0],\n        setState = _useState2[1];\n\n  console.log(questions);\n\n  function updateState() {\n    const _updateState = updateState({\n      title: '',\n      subtitle: ''\n    }),\n          _updateState2 = _slicedToArray(_updateState, 2),\n          newQ = _updateState2[0],\n          setQ = _updateState2[1];\n\n    return newQ;\n  }\n\n  const addQuestions = () => {\n    setState(questions => [...questions, newQ]);\n  };\n  /*    //const [title, setTitle] = useState('');\n      const [state, setState] = useState({\n          title : '',\n          subtitle : '',\n          category : '',\n          up : 0,\n          answers : [],\n      })\n  \n      //add State to questions props array\n      const onAddItem = () => {\n         const newArray = [...questions.concat(state)];\n          return console.log(newArray);\n  \n      };*/\n  //console.log(questions);\n\n\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Ask a question\"), React.createElement(\"form\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-input\",\n    placeholder: \"Enter title\",\n    onChange: event => setTitle({\n      title: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-input\",\n    placeholder: \"Enter subtitle\",\n    onChange: event => setSubtitle({\n      subtitle: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-input\",\n    placeholder: \"Enter Category\" // onChange={event => setQuestion({category : event.target.value})}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: addQuestions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })));\n};\n\nexport default AskQuestion;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/AskQuestion.js"],"names":["React","useState","Button","Typography","makeStyles","useStyles","button","marginTop","AskQuestion","props","questions","setState","console","log","updateState","title","subtitle","newQ","setQ","addQuestions","classes","event","setTitle","target","value","setSubtitle"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AACzBE,EAAAA,MAAM,EAAG;AACLC,IAAAA,SAAS,EAAG;AADP;AADgB,CAAD,CAA5B;;AAOA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA,oBAGGR,QAAQ,CAACQ,KAAK,CAACC,SAAP,CAHX;AAAA;AAAA,QAGpBA,SAHoB;AAAA,QAGTC,QAHS;;AAI3BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AAGA,WAASI,WAAT,GAAuB;AAAA,yBACEA,WAAW,CAAC;AAC7BC,MAAAA,KAAK,EAAG,EADqB;AAE7BC,MAAAA,QAAQ,EAAG;AAFkB,KAAD,CADb;AAAA;AAAA,UACZC,IADY;AAAA,UACNC,IADM;;AAKnB,WAAOD,IAAP;AACH;;AAID,QAAME,YAAY,GAAG,MAAM;AACvBR,IAAAA,QAAQ,CAACD,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeO,IAAf,CAAd,CAAR;AAEH,GAHD;AAKJ;;;;;;;;;;;;;;;AAiBI;;;AAGJ,QAAMG,OAAO,GAAGf,SAAS,EAAzB;AACI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,YAA7B;AAA2C,IAAA,WAAW,EAAC,aAAvD;AACI,IAAA,QAAQ,EAAEgB,KAAK,IAAIC,QAAQ,CAAC;AAAEP,MAAAA,KAAK,EAAGM,KAAK,CAACE,MAAN,CAAaC;AAAvB,KAAD,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,YAA7B;AAA2C,IAAA,WAAW,EAAC,gBAAvD;AACO,IAAA,QAAQ,EAAEH,KAAK,IAAII,WAAW,CAAC;AAACT,MAAAA,QAAQ,EAAGK,KAAK,CAACE,MAAN,CAAaC;AAAzB,KAAD,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAOI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,YAA7B;AAA2C,IAAA,WAAW,EAAC,gBAAvD,CACM;AADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAUI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEJ,OAAO,CAACd,MAA3B;AAAmC,IAAA,OAAO,EAAC,WAA3C;AAAuD,IAAA,KAAK,EAAC,SAA7D;AACK,IAAA,OAAO,EAAEa,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,EAcI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CAFJ,CADJ;AAqBH,CAhED;;AAkEA,eAAeX,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport {Typography} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n    button : {\n        marginTop : 20,\n    }\n})\n\n\nconst AskQuestion = (props) => {\n\n\n    const [questions, setState] = useState(props.questions);\n    console.log(questions);\n\n\n    function updateState() {\n        const [newQ, setQ] = updateState({\n            title : '',\n            subtitle : ''\n        })\n        return newQ\n    }\n\n\n\n    const addQuestions = () => {\n        setState(questions => [...questions, newQ]);\n\n    }\n\n/*    //const [title, setTitle] = useState('');\n    const [state, setState] = useState({\n        title : '',\n        subtitle : '',\n        category : '',\n        up : 0,\n        answers : [],\n    })\n\n    //add State to questions props array\n    const onAddItem = () => {\n       const newArray = [...questions.concat(state)];\n        return console.log(newArray);\n\n    };*/\n\n\n    //console.log(questions);\n\n\nconst classes = useStyles();\n    return (\n        <div>\n            <Typography>Ask a question</Typography>\n            <form className=\"form\">\n                <input type=\"text\" className=\"form-input\"  placeholder=\"Enter title\"\n                    onChange={event => setTitle({ title : event.target.value})}\n                />\n                <input type=\"text\" className=\"form-input\"  placeholder=\"Enter subtitle\"\n                       onChange={event => setSubtitle({subtitle : event.target.value})}\n                />\n                <input type=\"text\" className=\"form-input\"  placeholder=\"Enter Category\"\n                      // onChange={event => setQuestion({category : event.target.value})}\n                />\n                <Button className={classes.button} variant=\"contained\" color=\"primary\"\n                     onClick={addQuestions}\n                >Submit\n                </Button>\n                <Typography component=\"p\"></Typography>\n            </form>\n        </div>\n    )\n}\n\nexport default AskQuestion;"]},"metadata":{},"sourceType":"module"}