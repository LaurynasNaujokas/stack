{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/Question.js\";\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { CardContent, CardHeader, CardActions } from '@material-ui/core';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nconst useStyles = makeStyles({\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  Grid: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  Box: {\n    backgroundColor: 'red'\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n});\n\nfunction Question(props) {\n  const classes = useStyles();\n  const question = props.getquestionid(parseInt(props.id.toString()));\n  console.log(question);\n  return React.createElement(Grid, {\n    container: true,\n    space: 1,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: question.title,\n    subheader: question.category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Question: \", question.subtitle), React.createElement(Typography, {\n    variant: \"h4\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, question.upVote)), React.createElement(CardActions, {\n    disableSpacing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(FavoriteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    \"aria-label\": \"share\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(ShareIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))))));\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/client/src/components/Question.js"],"names":["React","Grid","Card","Typography","makeStyles","CardContent","CardHeader","CardActions","IconButton","FavoriteIcon","ShareIcon","useStyles","card","display","flexDirection","alignItems","justifyContent","marginTop","Box","backgroundColor","spaceBetween","Question","props","classes","question","getquestionid","parseInt","id","toString","console","log","title","category","subtitle","upVote"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { CardContent, CardHeader, CardActions,  } from '@material-ui/core';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\n\n\nconst useStyles = makeStyles(({\n    card : {\n        display : 'flex',\n        flexDirection : 'column', \n        alignItems : 'center',\n        justifyContent : 'center',\n        marginTop : 20,\n    },\n    Grid : {\n        display: 'flex',\n        alignItems :'center',\n        flexDirection : 'row',\n    },\n    Box : {\n        backgroundColor : 'red',\n    },\n    spaceBetween : {\n        display: 'flex',\n        justifyContent : 'space-between'\n    }\n}))\n\n\nfunction Question(props) {    \n    const classes = useStyles();\n    const question = props.getquestionid(parseInt(props.id.toString()));\n\n    console.log(question);\n\n    return(\n        <Grid container space={1} justify=\"center\" alignItems=\"center\">\n            <Grid item>\n                <Card  className={classes.card}>\n                    <CardHeader\n                        title={question.title}\n                        subheader={question.category}\n                    >\n                    </CardHeader>\n                    <CardContent >\n                        <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                            Question: {question.subtitle}\n                        </Typography>\n                        <Typography variant=\"h4\" color=\"textSecondary\" component=\"p\">\n                            {question.upVote}\n                        </Typography>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                        <IconButton aria-label=\"add to favorites\">\n                            <FavoriteIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                            <ShareIcon />\n                        </IconButton>\n                    </CardActions>\n                </Card>     \n            </Grid>\n        </Grid>\n   \n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}