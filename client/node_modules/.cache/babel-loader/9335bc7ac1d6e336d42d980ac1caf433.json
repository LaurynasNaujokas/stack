{"ast":null,"code":"var _jsxFileName = \"/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Questions.js\";\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport Typpgraphy from \"@material-ui/core/Typography\";\nimport { Link } from \"@reach/router\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles({\n  paper: {\n    maxWidth: 200,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: 20,\n    padding: 50\n  },\n  Grid: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  Typography: {\n    marginTop: 20\n  }\n});\n\nfunction Questions({\n  questions,\n  upVote\n}) {\n  const classes = useStyles();\n  return React.createElement(Container, {\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Typpgraphy, {\n    className: classes.Typography,\n    variant: \"h3\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Questions\"), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    className: classes.Grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, questions.map((question, index) => {\n    return React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Link, {\n      id: question.id,\n      key: index,\n      question: question,\n      index: index,\n      to: \"/question/\".concat(question.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, question.title), React.createElement(\"p\", {\n      onClick: () => upVote(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, question.upVote));\n  })));\n}\n\nexport default Questions;","map":{"version":3,"sources":["/Users/laurynas/Desktop/ReactProjects/stackclone/src/components/Questions.js"],"names":["React","Grid","Paper","Container","Typpgraphy","Link","makeStyles","Typography","useStyles","paper","maxWidth","display","justifyContent","alignItems","flexDirection","margin","padding","marginTop","Questions","questions","upVote","classes","map","question","index","id","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,IAAR,QAAmB,eAAnB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAE;AAC1BG,EAAAA,KAAK,EAAG;AACJC,IAAAA,QAAQ,EAAG,GADP;AAEJC,IAAAA,OAAO,EAAG,MAFN;AAGJC,IAAAA,cAAc,EAAG,QAHb;AAIJC,IAAAA,UAAU,EAAG,QAJT;AAKJC,IAAAA,aAAa,EAAG,QALZ;AAMJC,IAAAA,MAAM,EAAG,EANL;AAOJC,IAAAA,OAAO,EAAG;AAPN,GADkB;AAU1Bf,EAAAA,IAAI,EAAG;AACHU,IAAAA,OAAO,EAAE,MADN;AAEHE,IAAAA,UAAU,EAAE,QAFT;AAGHC,IAAAA,aAAa,EAAG;AAHb,GAVmB;AAe1BP,EAAAA,UAAU,EAAG;AACTU,IAAAA,SAAS,EAAG;AADH;AAfa,CAAF,CAA5B;;AAoBA,SAASC,SAAT,CAAmB;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAnB,EAAuC;AAEnC,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AAEA,SACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEa,OAAO,CAACd,UAA/B;AAA2C,IAAA,OAAO,EAAC,IAAnD;AAAwD,IAAA,SAAS,EAAC,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEA,oBAAC,IAAD;AAAO,IAAA,SAAS,MAAhB;AAAiB,IAAA,IAAI,MAArB;AAAsB,IAAA,EAAE,EAAE,EAA1B;AAA8B,IAAA,OAAO,EAAE,CAAvC;AAA0C,IAAA,SAAS,EAAEc,OAAO,CAACpB,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCkB,SAAS,CAACG,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAChC,WAEQ,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEH,OAAO,CAACZ,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AACI,MAAA,EAAE,EAAEc,QAAQ,CAACE,EADjB;AAEI,MAAA,GAAG,EAAED,KAFT;AAGI,MAAA,QAAQ,EAAED,QAHd;AAII,MAAA,KAAK,EAAEC,KAJX;AAKI,MAAA,EAAE,sBAAeD,QAAQ,CAACE,EAAxB,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKqCF,QAAQ,CAACG,KAL9C,CADJ,EAQQ;AAAG,MAAA,OAAO,EAAE,MAAMN,MAAM,CAACI,KAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCD,QAAQ,CAACH,MAA3C,CARR,CAFR;AAcH,GAfA,CADD,CAFA,CADJ;AAyBH;;AAGD,eAAeF,SAAf","sourcesContent":["import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport Typpgraphy from \"@material-ui/core/Typography\";\nimport {Link} from \"@reach/router\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(({\n    paper : {\n        maxWidth : 200,\n        display : 'flex',\n        justifyContent : 'center',\n        alignItems : 'center',\n        flexDirection : 'column', \n        margin : 20,\n        padding : 50\n    },\n    Grid : {\n        display: 'flex',\n        alignItems :'center',\n        flexDirection : 'row',\n    },\n    Typography : {\n        marginTop : 20\n    }\n}));\n\nfunction Questions({questions, upVote}){\n\n    const classes = useStyles();\n\n    return(\n        <Container maxWidth=\"xl\"> \n            <Typpgraphy className={classes.Typography} variant=\"h3\" component=\"h2\" >Questions</Typpgraphy>\n        <Grid  container item xs={12} spacing={3} className={classes.Grid}>\n        {questions.map((question, index) => {\n            return (    \n              \n                    <Paper className={classes.paper} >\n                        <Link \n                            id={question.id}\n                            key={index}\n                            question={question}\n                            index={index}\n                            to={`/question/${question.id}`}>{question.title}     \n                        </Link> \n                            <p onClick={() => upVote(index)}>{question.upVote}</p>   \n                    </Paper>\n             \n                )\n        }\n        )}\n        </Grid>\n        \n    </Container>\n    )\n}\n\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}